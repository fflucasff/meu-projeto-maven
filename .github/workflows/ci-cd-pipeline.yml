name: CI/CD Pipeline Java

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Executar Testes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Executar testes com Maven
        run: mvn clean test

      - name: Gerar relatório de testes
        if: always()
        run: mvn surefire-report:report-only

      - name: Upload do relatório de testes
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: relatorio-testes
          path: target/surefire-reports/
          retention-days: 30

  build:
    name: Build (Empacotamento)
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Upload do pacote JAR
        uses: actions/upload-artifact@v3
        with:
          name: pacote-jar
          path: target/*.jar
          retention-days: 30

  notify:
    name: Notificação por Email
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Determinar status da pipeline
        id: status
        run: |
          if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.build.result }}" == "success" ]; then
            echo "status=SUCESSO ✅" >> $GITHUB_OUTPUT
          else
            echo "status=FALHA ❌" >> $GITHUB_OUTPUT
          fi

      - name: Compilar projeto e dependências
        run: |
          echo "Compilando projeto Java..."
          mvn clean compile
          echo "Copiando dependências..."
          mvn dependency:copy-dependencies -DoutputDirectory=target/lib
          echo "Compilação concluída!"

      - name: Executar script Java de envio de email
        env:
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          PIPELINE_STATUS: ${{ steps.status.outputs.status }}
          TEST_RESULT: ${{ needs.test.result }}
          BUILD_RESULT: ${{ needs.build.result }}
          REPO_NAME: ${{ github.repository }}
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_SHA: ${{ github.sha }}
          COMMIT_AUTHOR: ${{ github.actor }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          echo "Executando script de envio de email..."
          java -cp "target/classes:target/lib/*" br.com.exemplo.envioEmail
          echo "Script executado!"